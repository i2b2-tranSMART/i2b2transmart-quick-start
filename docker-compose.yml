version: '3.3'
services:

  # nginx
  nginx:
    image: dbmi/nginx:${nginx_version}
    labels:
      - "edu.hms.harvard.dbmi.stack.name=${STACK_NAME}"
      - "edu.hms.harvard.dbmi.stack.env=${STACK_ENV}"
    restart: always
    networks:
      - public
    # application stack exposed ports
    ports:
      - ${HTTP_PORT:-80}:80
      - ${HTTPS_PORT:-443}:443

  ## i2b2transmart stack ##
  # transmart
  transmart:
    image: dbmi/i2b2transmart:${i2b2transmart_version}
    labels:
      - "edu.hms.harvard.dbmi.stack.name=${STACK_NAME}"
      - "edu.hms.harvard.dbmi.stack.env=${STACK_ENV}"
    env_file:
      - ${ENV_FILE}
    restart: always
    depends_on:
      - nginx
      - solr
      - rserve
      - db
    volumes:
      - rserve-jobs:/tmp:rw
    networks:
      - public
    expose:
      - 8080

  # i2b2transmart database
  db:
    image: dbmi/i2b2transmart-db:${db_version}
    labels:
      - "edu.hms.harvard.dbmi.stack.name=${STACK_NAME}"
      - "edu.hms.harvard.dbmi.stack.env=${STACK_ENV}"
    restart: always
    networks:
      - public
    expose:
      - 1521
    # i2b2transmart database exposed port
    ports:
      - ${DOCKER_DB_PORT:-1521}:1521

  # Rserve
  rserve:
    image: dbmi/rserve:${rserve_version}
    labels:
      - "edu.hms.harvard.dbmi.stack.name=${STACK_NAME}"
      - "edu.hms.harvard.dbmi.stack.env=${STACK_ENV}"
    restart: always
    expose:
      - 6311
    volumes:
      - rserve-jobs:/tmp:rw
    networks:
      - public

  solr:
    image: dbmi/solr:${solr_version}
    labels:
      - "edu.hms.harvard.dbmi.stack.name=${STACK_NAME}"
      - "edu.hms.harvard.dbmi.stack.env=${STACK_ENV}"
    env_file:
      - ${ENV_FILE}
    restart: always
    networks:
      - public
    expose:
      - 8983

  ## Fractalis Stack ##
  fractalis:
    image: sherzinger/fractalis:${fractalis_version}
    labels:
      - "edu.hms.harvard.dbmi.stack.name=${STACK_NAME}"
      - "edu.hms.harvard.dbmi.stack.env=${STACK_ENV}"
    restart: always
    volumes:
      - "${PWD}/config/fractalis:/app/conf"
    environment:
      - FRACTALIS_CONFIG=/app/conf/config.py
    command: gunicorn -w 3 -b :5000 --timeout 90 --log-file - fractalis:app
    networks:
      - public
    expose:
      - 5000
    restart: always
    depends_on:
      - irct
      - redis
      - rabbitmq
      - nginx
      - worker

  worker:
    image: sherzinger/fractalis:${fractalis_version}
    labels:
      - "edu.hms.harvard.dbmi.stack.name=${STACK_NAME}"
      - "edu.hms.harvard.dbmi.stack.env=${STACK_ENV}"
    restart: always
    # Caused problems, so I commented out the volumes.
    # https://docs.docker.com/compose/compose-file/#/volumes-volume-driver
    # https://stackoverflow.com/questions/45573831/docker-compose-not-able-to-copy-haproxy-cfg
    volumes:
      - "${PWD}/config/fractalis/:/app/conf/"
    environment:
      - FRACTALIS_CONFIG=/app/conf/config.py
    command: celery worker -A fractalis:celery -l debug --autoscale 16,4
    networks:
      - public
    restart: always
    depends_on:
      - redis
      - rabbitmq

  redis:
    image: redis:alpine
    labels:
      - "edu.hms.harvard.dbmi.stack.name=${STACK_NAME}"
      - "edu.hms.harvard.dbmi.stack.env=${STACK_ENV}"
    restart: always
    command: >
      sh -c "redis-server
      && redis-cli CONFIG SET maxmemory 4gb
      && redis-cli CONFIG SET maxmemory-policy allkeys-lru
      && redis-cli CONFIG SET save ''
      && redis-cli CONFIG SET appendonly no"
    networks:
      - public

  rabbitmq:
    image: rabbitmq:alpine
    labels:
      - "edu.hms.harvard.dbmi.stack.name=${STACK_NAME}"
      - "edu.hms.harvard.dbmi.stack.env=${STACK_ENV}"
    restart: always
    networks:
      - public

  ## PIC-SURE API Stack ##
  # IRCT
  irct:
    image: dbmi/irct:${irct_version}
    labels:
      - "edu.hms.harvard.dbmi.stack.name=${STACK_NAME}"
      - "edu.hms.harvard.dbmi.stack.env=${STACK_ENV}"
    depends_on:
      - irctdb
      - nginx
      - i2b2-wildfly
    env_file:
      - ${ENV_FILE}
    restart: always
    networks:
      - public
    expose:
      - 8080

  # PIC-SURE i2b2-wildfly resource
  i2b2-wildfly:
    image: dbmi/i2b2-wildfly:${i2b2_wildfly_version}
    labels:
      - "edu.hms.harvard.dbmi.stack.name=${STACK_NAME}"
      - "edu.hms.harvard.dbmi.stack.env=${STACK_ENV}"
    env_file:
      - ${ENV_FILE}
    environment:
      - JAVA_OPTS=-Xms512m -Xmx1024m -XX:MetaspaceSize=96M -XX:MaxMetaspaceSize=256m -Djava.net.preferIPv4Stack=true
    restart: always
    networks:
      - public
    expose:
      - 9090

  # IRCT DB
  irctdb:
    image: dbmi/irct-db:${irctdb_version}
    labels:
      - "edu.hms.harvard.dbmi.stack.name=${STACK_NAME}"
      - "edu.hms.harvard.dbmi.stack.env=${STACK_ENV}"
    env_file:
      - ${ENV_FILE}
    restart: always
    command: --datadir=/mysql/data
    networks:
      - public
    expose:
      - 3306
    # PIC-SURE database exposed port
    ports:
      - ${DOCKER_IRCT_DB_PORT:-3306}:3306
    volumes:
      - irct-data:/mysql/data

volumes:
  # PIC-SURE database
  irct-data:
  # shared volume for R jobs
  rserve-jobs:

networks:
  public:
